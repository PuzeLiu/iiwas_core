#include "iiwas_kinematics.h"
#include <iostream>

namespace iiwas_kinematics {


    Kinematics::Kinematics(const Vector3d &tcp_position, const Quaterniond &tcp_quaternion) : Kinematics() {
        tcp_pos = tcp_position;
        tcp_quat = tcp_quaternion;
        T_ee.block<3, 1>(0, 3) = tcp_pos;
        T_ee.block<3, 3>(0, 0) = tcp_quat.toRotationMatrix();
    }

    Kinematics::Kinematics() {
        d_bs = 0.36;     // Distance from base to shoulder
        d_se = 0.42;     // Distance from shoulder to elbow
        d_ew = 0.4;      // Distance from elbow to wrist
        d_wf = 0.151;    // Distance from elbow to finger(tip)

        dh_a << 0., 0., 0., 0., 0., 0., 0.;
        dh_alpha << -M_PI_2, M_PI_2, M_PI_2, -M_PI_2, -M_PI_2, M_PI_2, 0.;
        dh_d << d_bs, 0., d_se, 0., d_ew, 0., d_wf;

        T_ee.setIdentity();
    }

    void Kinematics::transform_i(double q, int i, Kinematics::TransformMatrixType& T_i) {
        T_i << cos(q), -sin(q) * cos(dh_alpha[i]), sin(q) * sin(dh_alpha[i]), dh_a[i] * cos(q),
                sin(q), cos(q) * cos(dh_alpha[i]), -cos(q) * sin(dh_alpha[i]), dh_a[i] * sin(q),
                0., sin(dh_alpha[i]), cos(dh_alpha[i]), dh_d[i],
                0., 0., 0., 1.;
    }

    void Kinematics::forward_kinematics(const Kinematics::JointArrayType &q, Vector3d &out_ee_pos,
                                        Quaterniond &out_ee_quat) {
        TransformMatrixType T;
        T.setIdentity();
        TransformMatrixType T_tmp;
        for (int i = 0; i < NUM_OF_JOINTS; ++i) {
            transform_i(q[i], i, T_tmp);
            T = T * T_tmp;
        }
//        cout<< "Transformation Matrix: \n" << T << endl;
        out_ee_pos = T.block<3, 1>(0, 3);
        out_ee_quat = T.block<3, 3>(0, 0);
    }

    void Kinematics::jacobian(const JointArrayType &q, JacobianType &out_jacobian) {
        JacobianPosType jac_pos;
        JacobianRotType jac_rot;
        jacobian_pos(q, jac_pos);
        jacobian_rot(q, jac_rot);
        out_jacobian.block<3, NUM_OF_JOINTS>(0, 0) = jac_pos;
        out_jacobian.block<3, NUM_OF_JOINTS>(3, 0) = jac_rot;
    }

    void Kinematics::jacobian_pos(const Kinematics::JointArrayType &q, Kinematics::JacobianPosType &out_jacobian) {
        double q_1 = q[0];
        double q_2 = q[1];
        double q_3 = q[2];
        double q_4 = q[3];
        double q_5 = q[4];
        double q_6 = q[5];
        double q_7 = q[6];

        out_jacobian(0, 0) = d_ew*((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4)) - d_se*sin(q_1)*sin(q_2) + d_wf*((((-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (sin(q_1)*sin(q_3)*cos(q_2) - cos(q_1)*cos(q_3))*sin(q_5))*sin(q_6) + (-(-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4))*cos(q_6)) + tcp_pos.x()*(((((-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (sin(q_1)*sin(q_3)*cos(q_2) - cos(q_1)*cos(q_3))*sin(q_5))*cos(q_6) + ((-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*sin(q_4) + sin(q_1)*sin(q_2)*cos(q_4))*sin(q_6))*cos(q_7) + ((-(-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_5) + (sin(q_1)*sin(q_3)*cos(q_2) - cos(q_1)*cos(q_3))*cos(q_5))*sin(q_7)) + tcp_pos.y()*((-(((-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (sin(q_1)*sin(q_3)*cos(q_2) - cos(q_1)*cos(q_3))*sin(q_5))*cos(q_6) - ((-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*sin(q_4) + sin(q_1)*sin(q_2)*cos(q_4))*sin(q_6))*sin(q_7) + ((-(-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_5) + (sin(q_1)*sin(q_3)*cos(q_2) - cos(q_1)*cos(q_3))*cos(q_5))*cos(q_7)) + tcp_pos.z()*((((-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (sin(q_1)*sin(q_3)*cos(q_2) - cos(q_1)*cos(q_3))*sin(q_5))*sin(q_6) + (-(-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4))*cos(q_6));
        out_jacobian(0, 1) = d_ew*(sin(q_2)*sin(q_4)*cos(q_1)*cos(q_3) + cos(q_1)*cos(q_2)*cos(q_4)) + d_se*cos(q_1)*cos(q_2) + d_wf*(((-sin(q_2)*cos(q_1)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_1)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5)*cos(q_1))*sin(q_6) + (sin(q_2)*sin(q_4)*cos(q_1)*cos(q_3) + cos(q_1)*cos(q_2)*cos(q_4))*cos(q_6)) + tcp_pos.x()*((((-sin(q_2)*cos(q_1)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_1)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5)*cos(q_1))*cos(q_6) + (-sin(q_2)*sin(q_4)*cos(q_1)*cos(q_3) - cos(q_1)*cos(q_2)*cos(q_4))*sin(q_6))*cos(q_7) + ((sin(q_2)*cos(q_1)*cos(q_3)*cos(q_4) - sin(q_4)*cos(q_1)*cos(q_2))*sin(q_5) + sin(q_2)*sin(q_3)*cos(q_1)*cos(q_5))*sin(q_7)) + tcp_pos.y()*((-((-sin(q_2)*cos(q_1)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_1)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5)*cos(q_1))*cos(q_6) - (-sin(q_2)*sin(q_4)*cos(q_1)*cos(q_3) - cos(q_1)*cos(q_2)*cos(q_4))*sin(q_6))*sin(q_7) + ((sin(q_2)*cos(q_1)*cos(q_3)*cos(q_4) - sin(q_4)*cos(q_1)*cos(q_2))*sin(q_5) + sin(q_2)*sin(q_3)*cos(q_1)*cos(q_5))*cos(q_7)) + tcp_pos.z()*(((-sin(q_2)*cos(q_1)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_1)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5)*cos(q_1))*sin(q_6) + (sin(q_2)*sin(q_4)*cos(q_1)*cos(q_3) + cos(q_1)*cos(q_2)*cos(q_4))*cos(q_6));
        out_jacobian(0, 2) = d_ew*(sin(q_1)*cos(q_3) + sin(q_3)*cos(q_1)*cos(q_2))*sin(q_4) + d_wf*(((sin(q_1)*sin(q_3) - cos(q_1)*cos(q_2)*cos(q_3))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_4)*cos(q_5))*sin(q_6) - (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_4)*cos(q_6)) + tcp_pos.x()*((((sin(q_1)*sin(q_3) - cos(q_1)*cos(q_2)*cos(q_3))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_4)*cos(q_5))*cos(q_6) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_4)*sin(q_6))*cos(q_7) + ((sin(q_1)*sin(q_3) - cos(q_1)*cos(q_2)*cos(q_3))*cos(q_5) - (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5)*cos(q_4))*sin(q_7)) + tcp_pos.y()*((-((sin(q_1)*sin(q_3) - cos(q_1)*cos(q_2)*cos(q_3))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_4)*cos(q_5))*cos(q_6) - (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_4)*sin(q_6))*sin(q_7) + ((sin(q_1)*sin(q_3) - cos(q_1)*cos(q_2)*cos(q_3))*cos(q_5) - (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5)*cos(q_4))*cos(q_7)) + tcp_pos.z()*(((sin(q_1)*sin(q_3) - cos(q_1)*cos(q_2)*cos(q_3))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_4)*cos(q_5))*sin(q_6) - (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_4)*cos(q_6));
        out_jacobian(0, 3) = d_ew*((sin(q_1)*sin(q_3) - cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) - sin(q_2)*sin(q_4)*cos(q_1)) + d_wf*((-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4))*sin(q_6)*cos(q_5) + (-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) - sin(q_2)*sin(q_4)*cos(q_1))*cos(q_6)) + tcp_pos.x()*(((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) - sin(q_2)*cos(q_1)*cos(q_4))*sin(q_5)*sin(q_7) + ((-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4))*cos(q_5)*cos(q_6) + ((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*sin(q_6))*cos(q_7)) + tcp_pos.y()*(((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) - sin(q_2)*cos(q_1)*cos(q_4))*sin(q_5)*cos(q_7) + (-(-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4))*cos(q_5)*cos(q_6) - ((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*sin(q_6))*sin(q_7)) + tcp_pos.z()*((-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4))*sin(q_6)*cos(q_5) + (-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) - sin(q_2)*sin(q_4)*cos(q_1))*cos(q_6));
        out_jacobian(0, 4) = d_wf*(-((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_5))*sin(q_6) + tcp_pos.x()*(((-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) - sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) - (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*sin(q_7) + (-((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_5))*cos(q_6)*cos(q_7)) + tcp_pos.y()*(((-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) - sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) - (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*cos(q_7) - (-((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_5))*sin(q_7)*cos(q_6)) + tcp_pos.z()*(-((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_5))*sin(q_6);
        out_jacobian(0, 5) = d_wf*((((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*cos(q_6) - (-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4))*sin(q_6)) + tcp_pos.x()*(-(((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*sin(q_6) + ((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) - sin(q_2)*cos(q_1)*cos(q_4))*cos(q_6))*cos(q_7) + tcp_pos.y()*((((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*sin(q_6) - ((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) - sin(q_2)*cos(q_1)*cos(q_4))*cos(q_6))*sin(q_7) + tcp_pos.z()*((((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*cos(q_6) - (-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4))*sin(q_6));
        out_jacobian(0, 6) = tcp_pos.x()*(-((((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*cos(q_6) + ((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) - sin(q_2)*cos(q_1)*cos(q_4))*sin(q_6))*sin(q_7) + (-((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_5))*cos(q_7)) + tcp_pos.y()*((-(((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*cos(q_6) - ((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) - sin(q_2)*cos(q_1)*cos(q_4))*sin(q_6))*cos(q_7) - (-((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_5))*sin(q_7));

        out_jacobian(1, 0) = d_ew*((sin(q_1)*sin(q_3) - cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4)) + d_se*sin(q_2)*cos(q_1) + d_wf*((((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*sin(q_6) + (-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4))*cos(q_6)) + tcp_pos.x()*(((((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*cos(q_6) + ((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) - sin(q_2)*cos(q_1)*cos(q_4))*sin(q_6))*cos(q_7) + ((-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) - sin(q_2)*sin(q_4)*cos(q_1))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_5))*sin(q_7)) + tcp_pos.y()*((-(((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*cos(q_6) - ((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) - sin(q_2)*cos(q_1)*cos(q_4))*sin(q_6))*sin(q_7) + ((-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) - sin(q_2)*sin(q_4)*cos(q_1))*sin(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*cos(q_5))*cos(q_7)) + tcp_pos.z()*((((-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*cos(q_4) + sin(q_2)*sin(q_4)*cos(q_1))*cos(q_5) + (-sin(q_1)*cos(q_3) - sin(q_3)*cos(q_1)*cos(q_2))*sin(q_5))*sin(q_6) + (-(-sin(q_1)*sin(q_3) + cos(q_1)*cos(q_2)*cos(q_3))*sin(q_4) + sin(q_2)*cos(q_1)*cos(q_4))*cos(q_6));
        out_jacobian(1, 1) = d_ew*(sin(q_1)*sin(q_2)*sin(q_4)*cos(q_3) + sin(q_1)*cos(q_2)*cos(q_4)) + d_se*sin(q_1)*cos(q_2) + d_wf*(((-sin(q_1)*sin(q_2)*cos(q_3)*cos(q_4) + sin(q_1)*sin(q_4)*cos(q_2))*cos(q_5) + sin(q_1)*sin(q_2)*sin(q_3)*sin(q_5))*sin(q_6) + (sin(q_1)*sin(q_2)*sin(q_4)*cos(q_3) + sin(q_1)*cos(q_2)*cos(q_4))*cos(q_6)) + tcp_pos.x()*((((-sin(q_1)*sin(q_2)*cos(q_3)*cos(q_4) + sin(q_1)*sin(q_4)*cos(q_2))*cos(q_5) + sin(q_1)*sin(q_2)*sin(q_3)*sin(q_5))*cos(q_6) + (-sin(q_1)*sin(q_2)*sin(q_4)*cos(q_3) - sin(q_1)*cos(q_2)*cos(q_4))*sin(q_6))*cos(q_7) + ((sin(q_1)*sin(q_2)*cos(q_3)*cos(q_4) - sin(q_1)*sin(q_4)*cos(q_2))*sin(q_5) + sin(q_1)*sin(q_2)*sin(q_3)*cos(q_5))*sin(q_7)) + tcp_pos.y()*((-((-sin(q_1)*sin(q_2)*cos(q_3)*cos(q_4) + sin(q_1)*sin(q_4)*cos(q_2))*cos(q_5) + sin(q_1)*sin(q_2)*sin(q_3)*sin(q_5))*cos(q_6) - (-sin(q_1)*sin(q_2)*sin(q_4)*cos(q_3) - sin(q_1)*cos(q_2)*cos(q_4))*sin(q_6))*sin(q_7) + ((sin(q_1)*sin(q_2)*cos(q_3)*cos(q_4) - sin(q_1)*sin(q_4)*cos(q_2))*sin(q_5) + sin(q_1)*sin(q_2)*sin(q_3)*cos(q_5))*cos(q_7)) + tcp_pos.z()*(((-sin(q_1)*sin(q_2)*cos(q_3)*cos(q_4) + sin(q_1)*sin(q_4)*cos(q_2))*cos(q_5) + sin(q_1)*sin(q_2)*sin(q_3)*sin(q_5))*sin(q_6) + (sin(q_1)*sin(q_2)*sin(q_4)*cos(q_3) + sin(q_1)*cos(q_2)*cos(q_4))*cos(q_6));
        out_jacobian(1, 2) = d_ew*(sin(q_1)*sin(q_3)*cos(q_2) - cos(q_1)*cos(q_3))*sin(q_4) + d_wf*(((-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_4)*cos(q_5) + (-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*sin(q_5))*sin(q_6) - (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_4)*cos(q_6)) + tcp_pos.x()*((((-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_4)*cos(q_5) + (-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*sin(q_5))*cos(q_6) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_4)*sin(q_6))*cos(q_7) + (-(-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5)*cos(q_4) + (-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_5))*sin(q_7)) + tcp_pos.y()*((-((-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_4)*cos(q_5) + (-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*sin(q_5))*cos(q_6) - (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_4)*sin(q_6))*sin(q_7) + (-(-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5)*cos(q_4) + (-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_5))*cos(q_7)) + tcp_pos.z()*(((-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_4)*cos(q_5) + (-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*sin(q_5))*sin(q_6) - (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_4)*cos(q_6));
        out_jacobian(1, 3) = d_ew*((-sin(q_1)*cos(q_2)*cos(q_3) - sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4)) + d_wf*((-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) + sin(q_1)*sin(q_2)*cos(q_4))*sin(q_6)*cos(q_5) + (-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4))*cos(q_6)) + tcp_pos.x()*(((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4))*sin(q_5)*sin(q_7) + ((-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) + sin(q_1)*sin(q_2)*cos(q_4))*cos(q_5)*cos(q_6) + ((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_6))*cos(q_7)) + tcp_pos.y()*(((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4))*sin(q_5)*cos(q_7) + (-(-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) + sin(q_1)*sin(q_2)*cos(q_4))*cos(q_5)*cos(q_6) - ((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_6))*sin(q_7)) + tcp_pos.z()*((-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) + sin(q_1)*sin(q_2)*cos(q_4))*sin(q_6)*cos(q_5) + (-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4))*cos(q_6));
        out_jacobian(1, 4) = d_wf*(-((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_5))*sin(q_6) + tcp_pos.x()*(((-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) - (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5))*sin(q_7) + (-((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_5))*cos(q_6)*cos(q_7)) + tcp_pos.y()*(((-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) - sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) - (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5))*cos(q_7) - (-((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_5))*sin(q_7)*cos(q_6)) + tcp_pos.z()*(-((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_5))*sin(q_6);
        out_jacobian(1, 5) = d_wf*((((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5))*cos(q_6) - (-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) + sin(q_1)*sin(q_2)*cos(q_4))*sin(q_6)) + tcp_pos.x()*(-(((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5))*sin(q_6) + ((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4))*cos(q_6))*cos(q_7) + tcp_pos.y()*((((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5))*sin(q_6) - ((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4))*cos(q_6))*sin(q_7) + tcp_pos.z()*((((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5))*cos(q_6) - (-(sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) + sin(q_1)*sin(q_2)*cos(q_4))*sin(q_6));
        out_jacobian(1, 6) = tcp_pos.x()*(-((((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5))*cos(q_6) + ((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4))*sin(q_6))*sin(q_7) + (-((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_5))*cos(q_7)) + tcp_pos.y()*((-(((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*cos(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*sin(q_5))*cos(q_6) - ((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*sin(q_4) - sin(q_1)*sin(q_2)*cos(q_4))*sin(q_6))*cos(q_7) - (-((sin(q_1)*cos(q_2)*cos(q_3) + sin(q_3)*cos(q_1))*cos(q_4) + sin(q_1)*sin(q_2)*sin(q_4))*sin(q_5) + (-sin(q_1)*sin(q_3)*cos(q_2) + cos(q_1)*cos(q_3))*cos(q_5))*sin(q_7));

        out_jacobian(2, 0) = 0;
        out_jacobian(2, 1) = d_ew*(-sin(q_2)*cos(q_4) + sin(q_4)*cos(q_2)*cos(q_3)) - d_se*sin(q_2) + d_wf*(((-sin(q_2)*sin(q_4) - cos(q_2)*cos(q_3)*cos(q_4))*cos(q_5) + sin(q_3)*sin(q_5)*cos(q_2))*sin(q_6) + (-sin(q_2)*cos(q_4) + sin(q_4)*cos(q_2)*cos(q_3))*cos(q_6)) + tcp_pos.x()*((((-sin(q_2)*sin(q_4) - cos(q_2)*cos(q_3)*cos(q_4))*cos(q_5) + sin(q_3)*sin(q_5)*cos(q_2))*cos(q_6) + (sin(q_2)*cos(q_4) - sin(q_4)*cos(q_2)*cos(q_3))*sin(q_6))*cos(q_7) + ((sin(q_2)*sin(q_4) + cos(q_2)*cos(q_3)*cos(q_4))*sin(q_5) + sin(q_3)*cos(q_2)*cos(q_5))*sin(q_7)) + tcp_pos.y()*((-((-sin(q_2)*sin(q_4) - cos(q_2)*cos(q_3)*cos(q_4))*cos(q_5) + sin(q_3)*sin(q_5)*cos(q_2))*cos(q_6) - (sin(q_2)*cos(q_4) - sin(q_4)*cos(q_2)*cos(q_3))*sin(q_6))*sin(q_7) + ((sin(q_2)*sin(q_4) + cos(q_2)*cos(q_3)*cos(q_4))*sin(q_5) + sin(q_3)*cos(q_2)*cos(q_5))*cos(q_7)) + tcp_pos.z()*(((-sin(q_2)*sin(q_4) - cos(q_2)*cos(q_3)*cos(q_4))*cos(q_5) + sin(q_3)*sin(q_5)*cos(q_2))*sin(q_6) + (-sin(q_2)*cos(q_4) + sin(q_4)*cos(q_2)*cos(q_3))*cos(q_6));
        out_jacobian(2, 2) = -d_ew*sin(q_2)*sin(q_3)*sin(q_4) + d_wf*((sin(q_2)*sin(q_3)*cos(q_4)*cos(q_5) + sin(q_2)*sin(q_5)*cos(q_3))*sin(q_6) - sin(q_2)*sin(q_3)*sin(q_4)*cos(q_6)) + tcp_pos.x()*(((sin(q_2)*sin(q_3)*cos(q_4)*cos(q_5) + sin(q_2)*sin(q_5)*cos(q_3))*cos(q_6) + sin(q_2)*sin(q_3)*sin(q_4)*sin(q_6))*cos(q_7) + (-sin(q_2)*sin(q_3)*sin(q_5)*cos(q_4) + sin(q_2)*cos(q_3)*cos(q_5))*sin(q_7)) + tcp_pos.y()*((-(sin(q_2)*sin(q_3)*cos(q_4)*cos(q_5) + sin(q_2)*sin(q_5)*cos(q_3))*cos(q_6) - sin(q_2)*sin(q_3)*sin(q_4)*sin(q_6))*sin(q_7) + (-sin(q_2)*sin(q_3)*sin(q_5)*cos(q_4) + sin(q_2)*cos(q_3)*cos(q_5))*cos(q_7)) + tcp_pos.z()*((sin(q_2)*sin(q_3)*cos(q_4)*cos(q_5) + sin(q_2)*sin(q_5)*cos(q_3))*sin(q_6) - sin(q_2)*sin(q_3)*sin(q_4)*cos(q_6));
        out_jacobian(2, 3) = d_ew*(sin(q_2)*cos(q_3)*cos(q_4) - sin(q_4)*cos(q_2)) + d_wf*((sin(q_2)*sin(q_4)*cos(q_3) + cos(q_2)*cos(q_4))*sin(q_6)*cos(q_5) + (sin(q_2)*cos(q_3)*cos(q_4) - sin(q_4)*cos(q_2))*cos(q_6)) + tcp_pos.x()*(((sin(q_2)*sin(q_4)*cos(q_3) + cos(q_2)*cos(q_4))*cos(q_5)*cos(q_6) + (-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*sin(q_6))*cos(q_7) + (-sin(q_2)*sin(q_4)*cos(q_3) - cos(q_2)*cos(q_4))*sin(q_5)*sin(q_7)) + tcp_pos.y()*((-(sin(q_2)*sin(q_4)*cos(q_3) + cos(q_2)*cos(q_4))*cos(q_5)*cos(q_6) - (-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*sin(q_6))*sin(q_7) + (-sin(q_2)*sin(q_4)*cos(q_3) - cos(q_2)*cos(q_4))*sin(q_5)*cos(q_7)) + tcp_pos.z()*((sin(q_2)*sin(q_4)*cos(q_3) + cos(q_2)*cos(q_4))*sin(q_6)*cos(q_5) + (sin(q_2)*cos(q_3)*cos(q_4) - sin(q_4)*cos(q_2))*cos(q_6));
        out_jacobian(2, 4) = d_wf*(-(-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*sin(q_5) + sin(q_2)*sin(q_3)*cos(q_5))*sin(q_6) + tcp_pos.x()*((-(-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*sin(q_5) + sin(q_2)*sin(q_3)*cos(q_5))*cos(q_6)*cos(q_7) + ((sin(q_2)*cos(q_3)*cos(q_4) - sin(q_4)*cos(q_2))*cos(q_5) - sin(q_2)*sin(q_3)*sin(q_5))*sin(q_7)) + tcp_pos.y()*(-(-(-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*sin(q_5) + sin(q_2)*sin(q_3)*cos(q_5))*sin(q_7)*cos(q_6) + ((sin(q_2)*cos(q_3)*cos(q_4) - sin(q_4)*cos(q_2))*cos(q_5) - sin(q_2)*sin(q_3)*sin(q_5))*cos(q_7)) + tcp_pos.z()*(-(-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*sin(q_5) + sin(q_2)*sin(q_3)*cos(q_5))*sin(q_6);
        out_jacobian(2, 5) = d_wf*(((-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5))*cos(q_6) - (sin(q_2)*sin(q_4)*cos(q_3) + cos(q_2)*cos(q_4))*sin(q_6)) + tcp_pos.x()*(-((-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5))*sin(q_6) + (-sin(q_2)*sin(q_4)*cos(q_3) - cos(q_2)*cos(q_4))*cos(q_6))*cos(q_7) + tcp_pos.y()*(((-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5))*sin(q_6) - (-sin(q_2)*sin(q_4)*cos(q_3) - cos(q_2)*cos(q_4))*cos(q_6))*sin(q_7) + tcp_pos.z()*(((-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5))*cos(q_6) - (sin(q_2)*sin(q_4)*cos(q_3) + cos(q_2)*cos(q_4))*sin(q_6));
        out_jacobian(2, 6) = tcp_pos.x()*(-(((-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5))*cos(q_6) + (-sin(q_2)*sin(q_4)*cos(q_3) - cos(q_2)*cos(q_4))*sin(q_6))*sin(q_7) + (-(-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*sin(q_5) + sin(q_2)*sin(q_3)*cos(q_5))*cos(q_7)) + tcp_pos.y()*((-((-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*cos(q_5) + sin(q_2)*sin(q_3)*sin(q_5))*cos(q_6) - (-sin(q_2)*sin(q_4)*cos(q_3) - cos(q_2)*cos(q_4))*sin(q_6))*cos(q_7) - (-(-sin(q_2)*cos(q_3)*cos(q_4) + sin(q_4)*cos(q_2))*sin(q_5) + sin(q_2)*sin(q_3)*cos(q_5))*sin(q_7));
    }

    void Kinematics::jacobian_rot(const Kinematics::JointArrayType &q, Kinematics::JacobianRotType &out_jacobian) {
        TransformMatrixType T;
        T.setIdentity();
        TransformMatrixType T_tmp;
        for (int i = 0; i < NUM_OF_JOINTS; ++i) {
            out_jacobian.block<3, 1>(0, i) = T.block<3, 1>(0, 2);
            transform_i(q[i], i, T_tmp);
            T = T * T_tmp;
        }
    }

}